parsers: # array
  # 更多语法详见https://docs.cfw.lbyczf.com/contents/parser.html#%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E
  # - reg: ^.*$ 匹配所有订阅，或  - url: https://example.com/profile.yaml 指定订阅
  - reg: ^.*$
  # 删除服务商提供的策略组和规则
    code: |
      module.exports.parse = (raw, { yaml }) => {
        const rawObj = yaml.parse(raw)
        const groups = []
        const rules = []
        return yaml.stringify({ ...rawObj, 'proxy-groups': groups, rules })
      } 
  # 建立自己的配置
    yaml:
      mix-proxy-providers: # 节点合并至原配置proxy-providers中
        NeteaseMusic:
          type: http
          path: ./Proxy/NeteaseMusic.yaml
          url: https://raw.githubusercontents.com/Reindex-9/CustomIP/main/proxy/NeteaseMusic/NeteaseMusic.yaml
          interval: 3600
          health-check:
            enable: true
            url: http://www.gstatic.com/generate_204
            interval: 3      

      prepend-proxy-groups: # 建立策略组(数组合并至原配置proxy-groups数组前)
        - name: 📶 Auto #测速自动选择     
          type: url-test
          url: http://www.google.com/generate_204
          interval: 86400

        - name: 🚩 CustomIP #选择地区（根据地区分类节点）
          type: select
          proxies:
            - 🌐 北美
            - 📶 Auto
            - 🌐 欧洲
            - 🌐 港澳台 
            - 🌐 日韩新 
            - 🌐 冷门国家
            - ✔️ PROXY

        - name: ✈️ OutSide #国外网站默认
          type: select
          proxies:
            - 🚩 CustomIP
            - 📶 Auto          
            - 🌐 北美
            - 🌐 欧洲
            - 🌐 港澳台 
            - 🌐 日韩新 
            - 🌐 冷门国家
            - ✔️ PROXY
            
        ##########################################################
        - name: 🌐 北美
          type: select

        - name: 🌐 欧洲 
          type: select
        
        - name: 🌐 港澳台
          type: select
        
        - name: 🌐 日韩新
          type: select

        - name: 🌐 冷门国家 
          type: select

        ##########################################################
        - name: 🔘 Option #自选模式
          type: select
          proxies:
            - DIRECT
            - ✈️ OutSide
            - 📶 Auto
            - ✔️ PROXY
            - 🚩 CustomIP 
            - 🌐 北美
            - 🌐 欧洲
            - 🌐 港澳台 
            - 🌐 日韩新 
            - 🌐 冷门国家    

        - name: 🌎️ IPmodify #改IP地址
          type: select
          proxies:
            - DIRECT
            - ✈️ OutSide
            - 📶 Auto
            - ✔️ PROXY
            - 🚩 CustomIP 
            - 🌐 北美
            - 🌐 欧洲
            - 🌐 港澳台 
            - 🌐 日韩新 
            - 🌐 冷门国家    

        - name: ♾️ Final #终极策略/黑白名单模式
          type: select
          proxies:
            - ✈️ OutSide
            - DIRECT # 仅此为黑名单模式，意为「只有命中规则的网络流量，才使用代理」
            - 📶 Auto 
            - ✔️ PROXY
            - 🚩 CustomIP 
            - 🌐 北美
            - 🌐 欧洲
            - 🌐 港澳台 
            - 🌐 日韩新 
            - 🌐 冷门国家        

        - name: 🎮 Game
          type: select
          proxies:
            - ✈️ OutSide
            - DIRECT
            - 🌐 冷门国家
            - 📶 Auto
            - ✔️ PROXY
            - 🚩 CustomIP 
            - 🌐 北美
            - 🌐 欧洲
            - 🌐 港澳台 
            - 🌐 日韩新             

        - name: ✔️ PROXY #选择节点
          type: select
          proxies:
            - 📶 Auto

        - name: 🎯 Direct
          type: select
          proxies:
            - DIRECT
            - 📶 Auto
            - ✔️ PROXY
            - 🚩 CustomIP 

        - name: 🚫 Reject
          type: select
          proxies:
            - REJECT
            - DIRECT
         

            
  # 策略组示例
       # - name: 分组名
         # type: select       # 手动选点   
               # url-test     # 自动选择延迟最低的节点
               # fallback     # 节点故障时自动切换下一个
               # laod-balance # 均衡使用分组内的节点
         # url: http://www.google.com/generate_204 # 测试地址 非select类型分组必要
         # interval: 300 # 自动测试间隔时间，单位秒 非select类型分组必要
         # tolerance: 50 # 允许的偏差，节点之间延迟差小于该值不切换 非必要
         # proxies:  
           # - 节点名称或其他分组套娃
          
      commands:
        # commands键中每个命令可以被分为三个部分，分别是：定位+操作+设定值
        # 定位：数组类型定位由下标0开始计算，定位中每个层级以.分割，proxy-groups.0.proxies.2表示定位到第一个策略组的第三个位置
        # 操作：“=”覆盖，“+”在此前插入，“-”删除此位置的值
        # 3 个内置值可用于设置策略组节点，分别是[]proxyNames，[]groupNames和[]shuffledProxyNames
        # 例：proxy-groups.myGroup.proxies=[]proxyNames|HK # 向策略组myGroup添加所有定义的节点名，并按“HK”正则表达式过滤

        - proxy-groups.✔️ PROXY.proxies=[]proxyNames # 向指定策略组添加订阅中的所有节点名       
        - proxy-groups.📶 Auto.proxies=[]proxyNames|^((?!music|𝐌𝐮𝐬𝐢𝐜|Unbolck|网易云|音乐|Music|Netease|🎶|手游|游戏|game).)*$
        - proxy-groups.✔️ PROXY.proxies.0+📶 Auto # 向指定分组第一个位置添加一个 📶 Auto 节点名

        # 向指定分组第一个位置添加一个 DIRECT 节点名，避免机场节点无法匹配上面的正则筛选而导致配置出错。 
        - proxy-groups.🌐 北美.proxies.0=DIRECT
        - proxy-groups.🌐 欧洲.proxies.0=DIRECT
        - proxy-groups.🌐 港澳台.proxies.0=DIRECT
        - proxy-groups.🌐 日韩新.proxies.0=DIRECT
        - proxy-groups.🌐 冷门国家.proxies.0=DIRECT
        

        # 向指定分组的第一个位置前插入添加订阅中的节点名，并按相应正则表达式过滤
        # ↓匹配包含美国|美國|United States|US中至少一个且不包含2x|3x|5x|10x中任何一个的节点
        # ^(?=.*(?:美国|美國|United States|US))(?!.*(?:2x|3x|5x|10x)).*$    
        # ^(?=.*(?:要包含的内容))(?!.*(?:要排除的内容)).*$  中间以|分隔    

        - proxy-groups.🌐 北美.proxies.0+[]proxyNames|^(?=.*(?:美国|美國|凤凰城|洛杉矶|西雅图|芝加哥|纽约|沪美|United States|US|us|加拿大|Canada))(?!.*(?:5x|10x)).*$
        - proxy-groups.🌐 欧洲.proxies.0+[]proxyNames|^(?=.*(?:德国|德國|Germany|DE|Ger|英国|英國|UK|uk|法国|法國|France|FR|意大利))(?!.*(?:5x|10x)).*$
        - proxy-groups.🌐 港澳台.proxies.0+[]proxyNames|^(?=.*(?:香港|深港|沪港|京港|港|HK|Hong Kong|澳门|澳門|Macau|台湾|台灣|台北|台中|新北|彰化|TW|Taiwan))(?!.*(?:5x|10x)).*$
        - proxy-groups.🌐 日韩新.proxies.0+[]proxyNames|^(?=.*(?:日本|东京|大阪|京日|苏日|沪日|上日|川日|深日|广日|川日|JP|Japan|韩|韓|首尔|春川|KR|Korea|KOR|新加坡|狮城|SG|Singapore))(?!.*(?:5x|10x)).*$
        - proxy-groups.🌐 冷门国家.proxies.0+[]proxyNames|^((?!剩余|套餐|到期|更新|美国|美國|凤凰城|洛杉矶|西雅图|芝加哥|纽约|沪美|United States|US|us|加拿大|Canada|德国|德國|Germany|DE|Ger|英国|英國|UK|uk|法国|法國|France|FR|意大利|香港|深港|沪港|京港|港|HK|Hong Kong|澳门|澳門|Macau|台湾|台灣|台北|台中|新北|彰化|TW|Taiwan|日本|东京|大阪|京日|苏日|沪日|上日|川日|深日|广日|川日|JP|Japan|韩|韓|首尔|春川|KR|Korea|KOR|新加坡|狮城|SG|Singapore).)*$
        # 冷门国家，过滤其他所有国家节点
        # 若不需排除，可直接用proxy-groups.策略组名.proxies.0+[]proxyNames|美国|美國|United States|US|us|加拿大|Canada

        # 一些可能用到的正则过滤节点示例，使分组更细致
        # []proxyNames|a                         # 包含a
        # []proxyNames|^(.*)(a|b)+(.*)$          # 包含a或b
        # []proxyNames|^(?=.*a)(?=.*b).*$        # 包含a和b
        # []proxyNames|^((?!b).)*a((?!b).)*$     # 包含a且不包含b
        # []proxyNames|^((?!b|c).)*a((?!b|c).)*$ # 包含a且不包含b或c
        # 正则使用可直接咨询chatgpt
        


  # 添加规则
      # 规则集排序：本地局域网 -> 修正Unbreak -> 拦截Reject（广告/劫持） -> 特殊直连 -> 特殊代理 -> 一般直连域名 -> 一般代理域名 -> IP段或者GEO -> 兜底Final
      # 规则由上往下遍历，如上面规则已经命中，则不再往下处理
      # 匹配参数：
        # DOMAIN-KEYWORD：域名关键字(即主机名)匹配
        # DOMAIN-SUFFIX：域名后缀（即顶级域名）匹配，最通用的域名后缀为.com
        # DOMAIN：域名（域名关键字+域名后缀）匹配
        # IP-CIDR：目标IP 段匹配（IPv4，匹配IPv6的关键字为IP-CIDR6）
        # SRC-IP-CIDR：源 IP 段匹配
        # GEOIP：GEOIP 数据库（国家代码）匹配，将IP匹配IP归属地
        # DST-PORT：目标端口匹配
        # SRC-PORT：源端口匹配
        # PROCESS-NAME：源进程名匹配（e.g. steam.exe）
        # RULE-SET：Rule Provider 规则匹配
        # MATCH：全匹配
      # 匹配源进程名时貌似只能通过写入paser，如果利用在线规则集貌似不生效(存疑，可能生效延迟)

      # github官方站实时更新，但加载配置时可能超时；github镜像站存在生效延迟，在线规则集无法实时更新，如需实时试验规则，只能直接写入paser
      # 官方raw链域名：raw.githubusercontent.com
      # 镜像站raw链域名：raw.githubusercontents.com 或 raw.gitmirror.com 或 cdn.jsdelivr.net

      prepend-rules: 
        - DOMAIN-SUFFIX,xn--ngstr-lra8j.com,✈️ OutSide
        - DOMAIN-SUFFIX,services.googleapis.cn,🚩 CustomIP
        - RULE-SET,GoogleCNProxyIP,🚩 CustomIP # 谷歌在国内的可直连域名

        - RULE-SET,LocalAreaNetwork,DIRECT
        - RULE-SET,UnBan,DIRECT

        - DOMAIN,clash.razord.top,DIRECT
        - DOMAIN,yacd.haishan.me,DIRECT

        - RULE-SET,BanAD,🚫 Reject
        - RULE-SET,BanProgramAD,🚫 Reject
        - RULE-SET,BanEasyListChina,🚫 Reject
        - RULE-SET,Hijacking,🚫 Reject
        - RULE-SET,RejectSelfuse,🚫 Reject
        
        - RULE-SET,OpenAI,🚩 CustomIP
        - RULE-SET,Bing,🚩 CustomIP
        - RULE-SET,Google,🚩 CustomIP
        
        - RULE-SET,CustomIPSelfuse,🚩 CustomIP
        - RULE-SET,ProxySelfuse,✈️ OutSide
        - RULE-SET,DirectSelfuse,🎯 Direct

        - RULE-SET,Microsoft,🔘 Option
        - RULE-SET,Apple,🔘 Option #若想icloud和apple使用不同的策略，将icloud规则集顺序放在apple上一位即可
        - RULE-SET,RedBook,🌎️ IPmodify
        
        - DOMAIN-SUFFIX,tianqi.com,✈️ OutSide

        - PROCESS-NAME,steamwebhelper.exe,🎮 Game # steam商店、好友界面
        - DOMAIN-SUFFIX,steamcommunity.com,🎮 Game # steam社区
        - PROCESS-NAME,steam.exe,🎯 Direct # steam下载、上传相关
        - PROCESS-NAME,steamservice.exe,🎯 Direct # steam处理installscripts iirc（安装DX、VS可再发行版等）
        - PROCESS-NAME,Stardew Valley.exe,🎯 Direct # 星露谷物语

        - RULE-SET,Game,🎮 Game

        - RULE-SET,ChinaMedia,🎯 Direct
        - RULE-SET,ProxyMedia,✈️ OutSide
        
        - RULE-SET,ProxyGFWlist,✈️ OutSide
        - RULE-SET,ChinaDomain,🎯 Direct
        - RULE-SET,ChinaCompanyIp,🎯 Direct
        - RULE-SET,Download,🎯 Direct
        - RULE-SET,ChinaIp,🎯 Direct

        - GEOIP,CN,🎯 Direct,no-resolve # no-resolve表示不进行dns解析
        - MATCH,♾️ Final # 规则之外的

  # 添加规则集
      # ruleset 指的是配置中包含的分流规则，
      # custom_proxy_group 指的是最终在Clash中呈现的分流策略组及其排序。
      # behavior为规则集类型，DOMAIN匹配域名，ipcidr为IPv4 / IPv6 集合，classical任意（匹配性能最差）。若设置成domain或ipcidr，yaml文件里格式需要纯净：例如，若设置成ipcidr，里面的非注释内容必须形如【- '1.0.1.0/24'】，不能是【- IP-CIDR,120.232.181.162/32,no-resolve】。若为后者，只能设置成classical类型。
      # url为下载地址，path 指定了规则集文件在本地保存的路径，即相对于当前配置文件所在目录的路径

      mix-rule-providers: 
        # 🚩🚩🚩🚩🚩🚩
        GoogleCNProxyIP: # 🚩
          type: http
          behavior: classical
          url: "https://raw.githubusercontents.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/GoogleCNProxyIP.yaml"
          path: ./ruleset/GoogleCNProxyIP.yaml
          interval: 86400

        # 🎯🎯🎯🎯🎯🎯
        LocalAreaNetwork: # 局域网地址 🎯
          type: http
          behavior: classical
          url: "https://raw.githubusercontents.com/ACL4SSR/ACL4SSR/master/Clash/Providers/LocalAreaNetwork.yaml"
          path: ./ruleset/LocalAreaNetwork.yaml
          interval: 86400

        UnBan: # 🎯
          type: http
          behavior: classical
          url: "https://raw.githubusercontents.com/ACL4SSR/ACL4SSR/master/Clash/Providers/UnBan.yaml"
          path: ./ruleset/UnBan.yaml
          interval: 86400

        # 🚫🚫🚫🚫🚫🚫
        BanAD: # 广告联盟 🚫 只包含常见广告关键字，无副作用，放心使用
          type: http
          behavior: classical
          url: "https://raw.githubusercontents.com/ACL4SSR/ACL4SSR/master/Clash/Providers/BanAD.yaml"
          path: ./ruleset/BanAD.yaml
          interval: 86400
        
        BanProgramAD: # 应用内广告拦截 🚫 可能有轻微副作用
          type: http
          behavior: classical
          url: "https://raw.githubusercontents.com/ACL4SSR/ACL4SSR/master/Clash/Providers/BanProgramAD.yaml"
          path: ./ruleset/BanProgramAD.yaml
          interval: 86400

        BanEasyListChina: # AdblockPlus中的中国所有的屏蔽域名 🚫
          type: http
          behavior: classical
          url: "https://raw.githubusercontents.com/ACL4SSR/ACL4SSR/master/Clash/Providers/BanEasyListChina.yaml"
          path: ./ruleset/BanEasyListChina.yaml
          interval: 86400

        Hijacking: # 运营商劫持 🚫
          type: http
          behavior: classical
          url: "https://raw.githubusercontents.com/blackmatrix7/ios_rule_script/master/rule/Clash/Hijacking/Hijacking.yaml"
          path: ./ruleset/Hijacking.yaml
          interval: 86400

        RejectSelfuse: # 自用禁止访问 🚫
          type: http
          behavior: classical
          url: "https://raw.githubusercontents.com/Reindex-9/CustomIP/main/ruleset/Reject.yaml"
          path: ./ruleset/RejectSelfuse.yaml
          interval: 86400

        # 🚩🚩🚩🚩🚩🚩 
        OpenAI: # OpenAI 域名列表 🚩
          type: http
          behavior: classical
          url: "https://raw.githubusercontents.com/blackmatrix7/ios_rule_script/master/rule/Clash/OpenAI/OpenAI.yaml"
          path: ./ruleset/OpenAI.yaml
          interval: 86400

        Bing: # Bing 域名列表 🚩
          type: http
          behavior: classical
          url: "https://raw.githubusercontents.com/blackmatrix7/ios_rule_script/master/rule/Clash/Bing/Bing.yaml"
          path: ./ruleset/Bing.yaml
          interval: 86400

        Google: # Google 域名列表 🚩
          type: http
          behavior: classical
          url: "https://raw.githubusercontents.com/blackmatrix7/ios_rule_script/master/rule/Clash/Google/Google.yaml"
          path: ./ruleset/Google.yaml
          interval: 86400

        CustomIPSelfuse: # 自用干净ip代理
          type: http
          behavior: classical
          url: "https://raw.githubusercontents.com/Reindex-9/CustomIP/main/ruleset/CustomIP.yaml"
          path: ./ruleset/CustomIPSelfuse.yaml
          interval: 86400

        # ✈️✈️✈️✈️✈️✈️
        ProxySelfuse: # 自用翻墙 ✈️
          type: http
          behavior: classical
          url: "https://raw.githubusercontents.com/Reindex-9/CustomIP/main/ruleset/Proxy.yaml"
          path: ./ruleset/ProxySelfuse.yaml
          interval: 86400


        # 🎯🎯🎯🎯🎯🎯
        DirectSelfuse: # 自用直连 🎯
          type: http
          behavior: classical
          url: "https://raw.githubusercontents.com/Reindex-9/CustomIP/main/ruleset/Direct.yaml"
          path: ./ruleset/DirectSelfuse.yaml
          interval: 86400

        # 🔘🔘🔘🔘🔘🔘
        Apple: # Apple 域名列表 🔘
          type: http
          behavior: classical
          url: "https://raw.githubusercontents.com/blackmatrix7/ios_rule_script/master/rule/Clash/Apple/Apple_Classical.yaml"
          path: ./ruleset/Apple.yaml
          interval: 86400
          
        Microsoft: # Microsoft 域名列表 🔘
          type: http
          behavior: classical
          url: "https://raw.githubusercontents.com/blackmatrix7/ios_rule_script/master/rule/Clash/Microsoft/Microsoft.yaml"
          path: ./ruleset/Microsoft.yaml
          interval: 86400       
          
        RedBook: # 小红书 🌎️
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/XiaoHongShu/XiaoHongShu.yaml"
          path: ./ruleset/RedBook.yaml
          interval: 86400     

        # 🌐🎯🌐🎯🌐🎯        
        Game: # 游戏（steam等） 🎮
          type: http
          behavior: classical
          url: "https://raw.githubusercontents.com/blackmatrix7/ios_rule_script/master/rule/Clash/Game/Game.yaml"
          path: ./Ruleset/Game.yaml
          interval: 86400

        # 🎯✈️🎯✈️🎯✈️   
        ChinaMedia: # 国内流媒体 🎯
          type: http
          behavior: classical
          url: "https://raw.githubusercontents.com/ACL4SSR/ACL4SSR/master/Clash/Providers/ChinaMedia.yaml"
          path: ./ruleset/ChinaMedia.yaml
          interval: 86400

        ProxyMedia: # 国外流媒体 ✈️
          type: http
          behavior: classical
          url: "https://raw.githubusercontents.com/ACL4SSR/ACL4SSR/master/Clash/Providers/ProxyMedia.yaml"
          path: ./ruleset/ProxyMedia.yaml
          interval: 86400

        ProxyGFWlist: # GFW的全量列表 ✈️
          type: http
          behavior: classical
          url: "https://raw.githubusercontents.com/ACL4SSR/ACL4SSR/master/Clash/Providers/ProxyGFWlist.yaml"
          path: ./ruleset/ProxyGFWlist.yaml
          interval: 86400

        ChinaDomain: # 国内常见域名、直连CDN等 🎯 （很全，常用网址都有）
          type: http
          behavior: classical
          url: "https://raw.githubusercontents.com/ACL4SSR/ACL4SSR/master/Clash/Providers/ChinaDomain.yaml"
          path: ./ruleset/ChinaDomain.yaml
          interval: 86400

        ChinaCompanyIp: # 国内BAT公司及云服务厂商的IP段 🎯
          type: http
          behavior: ipcidr
          url: "https://raw.githubusercontents.com/ACL4SSR/ACL4SSR/master/Clash/Providers/ChinaCompanyIp.yaml"
          path: ./ruleset/ChinaCompanyIp.yaml
          interval: 86400

        Download: # 下载服务，包括磁力等 🎯
          type: http
          behavior: classical
          url: "https://raw.githubusercontents.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Download.yaml"
          path: ./ruleset/Download.yaml
          interval: 86400

        ChinaIp: # 国内的IP地址段 🎯 比GEOIP好，电脑性能好可入
          type: http
          behavior: ipcidr
          url: "https://raw.githubusercontents.com/ACL4SSR/ACL4SSR/master/Clash/Providers/ChinaIp.yaml"
          path: ./ruleset/ChinaIp.yaml
          interval: 86400
